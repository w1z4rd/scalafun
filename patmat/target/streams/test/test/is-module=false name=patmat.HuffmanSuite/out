[0m[[0minfo[0m] [0m[32mHuffmanSuite:[0m[0m
[0m[[0minfo[0m] [0m[32m- weight of a larger tree[0m[0m
[0m[[0minfo[0m] [0m[32m- chars of a larger tree[0m[0m
[0m[[0minfo[0m] [0m[32m- string2chars("hello, world")[0m[0m
[0m[[0minfo[0m] [0m[32m- makeOrderedLeafList for some frequency table[0m[0m
[0m[[0minfo[0m] [0m[32m- combine of some leaf list[0m[0m
[0m[[0minfo[0m] [0m[32m- until of some leaf list[0m[0m
[0m[[0minfo[0m] [0m[32m- decode and encode a very short text should be identity[0m[0m
[0m[[0minfo[0m] [0m[32m- times a char occurs in a char list[0m[0m
[0m[[0minfo[0m] [0m[32m- singleton check if the list of trees contains only one code tree[0m[0m
[0m[[0minfo[0m] [0m[32m- createCodeTree of some string[0m[0m
[0m[[0minfo[0m] [0m[32m- decode short text[0m[0m
[0m[[0minfo[0m] [0m[32m- encode short text[0m[0m
[0m[[0minfo[0m] [0m[32m- codeBits returns the correct list of bits[0m[0m
[0m[[0minfo[0m] [0m[32m- mergeCodeTables returns correct CodeTable[0m[0m
[0m[[0minfo[0m] [0m[32m- convert CodeTree returns correct CodeTable[0m[0m
[0m[[0minfo[0m] [0m[32m- quickEncode works quickly[0m[0m
